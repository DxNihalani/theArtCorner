import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
// import { find, Observable } from 'rxjs';


interface Product {
  url: string;
  pname: string;
  description: string;
  category: string;
  price?: number;
 
}


@Injectable({
  providedIn: 'root'
})
export class ApiService {
  categories = [
    'Sculpting',
    'Painting',
    'Crochet',
    'Photography',
    'Pen Sketch',
  ];
  selectedCategory: string = 'Sculpting';

 
  productcart:any = [];
  product: Product[] = [];
    allProducts: Product[] = [];
    url: string = 'http://localhost:3000/products';
    
    constructor(private _http: HttpClient) {
    
    }

    // getProductByID(id:string){
    //   var idUrl= this.url+"/"+id;
    //   this._http.get<any[]>(idUrl)
    //   .subscribe(response=>this.productcart=response);
    //   console.log(this.productcart);
    // }
    
  // Code Generated by Side:kick is for learning and experimentation purposes only.
loading: boolean = false;
cartUrl:string ="http://localhost:3000/cart"
user:any = localStorage.getItem("user");

addToCart(id: string){
  this.loading = true;
  const user: any = localStorage.getItem("loggedInUser");
  //console.log(user);
  const userId = JSON.parse(user).id;

  this._http.get<Product[]>(this.url + "/" + id)
    .subscribe(response => {
      this.productcart = {
        ...response,
        userId:userId,
      };
      this._http.post(this.cartUrl, this.productcart,{
        headers :new HttpHeaders({
          'Content-Type':'application/json'
        })
      }).subscribe(reponse=>{
        this.loading = false;
        console.log("Added");
      },
        error => {
          this.loading = false;
          console.error('not added', error);
        }
      )
      // this.loading = false;
      console.log(this.productcart); // Log the updated productcart here
      
    }, error => {
      this.loading = false;
      console.error('Error fetching product:', error);
    });
   
}

getProductforDashboard(){

}

msg:string='';
// addToCart(){
//   this.loading = true;
//   console.log(this.productcart);
//   this._http.post(this.cartUrl, this.productcart,{
//     headers :new HttpHeaders({
//       'Content-Type':'application/json'
//     })
//   }).subscribe(reponse=>{
//     this.loading = false;
//     console.log("Added");
//   },
//     error => {
//       this.loading = false;
//       console.error('not added', error);
//     }
//   )
// }
  
  updateProducts(): void {
    this.product = this.allProducts.filter(
      (product) => product.category === this.selectedCategory
    );
  }
  
   
    onCategoryChange(event: Event): void {
      const target = event.target as HTMLSelectElement;
      const category = target.value;
      this.selectedCategory = category;
      this.updateProducts();
    }
  
}
